{"version":3,"sources":["state/action-creators/actionTypes.ts","bundler/index.ts","components/mainSections/topbar.tsx","state/reducers/nodeReducer.ts","state/reducers/bundleReducer.ts","state/reducers/index.ts","state/store.ts","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkgPathPlugin.ts","state/action-creators/index.ts","hooks/use-typed-selector.ts","hooks/use-actions.ts","components/sidebar/nodeFile.tsx","components/sidebar/nodeAddForm.tsx","components/sidebar/nodeFolder.tsx","components/sidebar/nodeItem.tsx","components/sidebar/nodeList.tsx","components/sidebar/index.tsx","components/miniSidebar/index.tsx","styles/theme.ts","components/mainSections/code/code-editor.tsx","components/mainSections/code/code-cell.tsx","components/mainSections/index.tsx","components/mainSections/view/preview.tsx","components/mainSections/welcomeGuide.tsx","index.tsx"],"names":["ActionType","service","ViewStateEnum","initialState","allNodes","name","nodeId","nodeType","files","fileFormat","code","text","parent","attemptToCreate","status","parentNodeId","selectedFileInfoToView","reducer","produce","state","action","type","CREATE_FILE","newFile","payload","randomId","push","UPDATE_FILE","file","cellType","newContent","nodeUpdateIndex","findIndex","n","parentIndex","parentFolder","subFileIndex","DELETE_FILE","filter","isSelectedFile","CREATE_FOLDER","newFolder","DELETE_FOLDER","CREATE_FILE_IN_FOLDER","folderNodeId","nodeFolderIndex","folderNode","DELETE_FILE_IN_FOLDER","fileNodeId","CREATE_NODE_ATTEMPT","SELECT_FILE_INFO_FOR_VIEW","mainIndex","subIndex","find","index","Math","random","toString","substr","loading","err","BUNDLE_START","BUNDLE_COMPLETE","bundle","reducers","combineReducers","nodes","nodeReducer","bundleReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","fileCache","localForage","createInstance","fetchPlugin","entry","setup","build","onLoad","loader","contents","args","a","path","startsWith","getItem","cachedResult","axios","get","data","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","pathArray","split","viewNode","viewFile","viewCode","undefined","allCode","esbuild","worker","wasmURL","entryPoints","write","plugins","onResolve","namespace","href","define","global","outputFiles","message","createFile","updateFile","deleteFile","createFolder","deleteFolder","createFileInFolder","deleteFileInFolder","createNodeAttempt","selectFileForView","createBundle","dispatch","useTypedSelector","useSelector","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","MainGrid","styled","Grid","theme","cursor","LineGrid","display","flexDirection","alignItems","padding","justifyContent","LeftLineGrid","FileIconStyled","InsertDriveFileOutlinedIcon","color","palette","secondary","main","fontSize","marginRight","marginLeft","NodeName","Typography","fontWeight","RightLineGrid","gap","IconButtonDeleteFile","IconButton","margin","custom","textGrey","IconFileDelete","HighlightOffIcon","NodeFile","node","selectedFileInfo","sx","background","onClick","marginBottom","width","FolderIconStyled","FolderIcon","InputStyled","lineHeight","outline","borderColor","orange","backgroundColor","borderRadius","FormStyled","NodeAddForm","nodeAttempt","useState","nodeNameInput","setNodeNameInput","formHandler","e","key","onBlur","onKeyPress","value","onChange","target","autoFocus","id","SubFilesGrid","IconArrowDown","KeyboardArrowDownIcon","IconButtonArrow","IconArrow","KeyboardArrowRightOutlinedIcon","IconButtonAddFile","IconButtonDeleteFolder","IconFolderDelete","IconFileAdd","NodeFolder","isFolderOpen","setIsFolderOpen","subFiles","map","NodeItem","NodeList","nodeListArray","dark2","minWidth","resize","overflow","HeadlineGrid","marginTop","Headline","paddingTop","Sidebar","variant","dark1","IconFolderAdd","CreateNewFolderOutlinedIcon","IconMenu","MenuOutlinedIcon","MiniSidebar","createTheme","primary","dark3","textWhite","editorColor","orangeLight","responsiveFontSizes","height","position","FormatButton","top","zIndex","right","border","transition","transform","BundleButton","CodeEditor","initialValue","doBundle","editorRef","useRef","prettierParser","unformatted","current","getModel","getValue","formatted","prettier","format","parser","parserBabel","parserHTML","useTabs","semi","singleQuote","setValue","console","log","editorDidMount","monacoEditor","onDidChangeModelContent","updateOptions","tabSize","Highlighter","window","monaco","codeShift","highLightOnDidChangeModelContent","language","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","scrollBeyondLastLine","automaticLayout","CodeCell","editorCode","setEditorCode","useEffect","onChangeHandler","CodeTab","flex","PreviewTab","opacity","Topbar","fileName","viewState","setViewState","useTheme","preview","flexGrow","Iframe","ErrorGrid","left","Preview","iframe","html","publicFolder","srcdoc","setTimeout","contentWindow","postMessage","ref","title","sandbox","srcDoc","Text","List","ListItem","WelcomeGuide","Main","default","entryPointRawCode","rawCode","srcFolderNode","timer","clearTimeout","selectedFile","renderJSX","minHeight","App","ThemeProvider","CssBaseline","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6e3a70cc.chunk.js","sourcesContent":["export enum ActionType {\n  CREATE_NODE_ATTEMPT = 'attempt_to_create_node',\n  SELECT_FILE_INFO_FOR_VIEW = 'select_file_info_for_view',\n\n  // file actions\n  DELETE_FILE = 'delete_file',\n  CREATE_FILE = 'add_file',\n  UPDATE_FILE = 'update_file',\n\n  // folder actions\n  DELETE_FOLDER = 'delete_folder',\n  CREATE_FOLDER = 'create_folder',\n  CREATE_FILE_IN_FOLDER = 'add_file_in_folder',\n  DELETE_FILE_IN_FOLDER = 'delete_file_in_folder',\n  // move actions are missed. later they will be handled.\n\n  // bundle actions\n  BUNDLE_START = 'bundle_start',\n  BUNDLE_COMPLETE = 'bundle_complete',\n}\n","import * as esbuild from 'esbuild-wasm';\nimport { unpkgPathPlugin } from './plugins/unpkgPathPlugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport { File, Folder } from '../state/cellNodeTypes';\n\nlet service: esbuild.Service;\nconst bundle = async (entry: string, allCode: (File | Folder)[]) => {\n  if (!service) {\n    // The service object here is going to do all stuff bundling and tranforming/transpiling. We need it anyway. This is the way we can be sure we have it always. The service object will return us 4 function so that we can use : build, serve, stop and transform. We will use build and transform. Transform just do transpiling not any bundling. Bundle function is self-explanatory.\n    service = await esbuild.startService({\n      worker: true,\n\n      // this is the bundler written in go, compiled to work in the browser. It is a web assebly binary file.\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n  }\n\n  // we have service and we can bundle now.\n  try {\n    const result = await service.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      // the order in plugins matters.\n      // we will give input the index.js only here and later help esbuild to find the correct paths and loads.\n      plugins: [unpkgPathPlugin(), fetchPlugin(entry, allCode)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"', // to fix a bug\n        global: 'window', // to fix a bug\n      },\n    });\n\n    // bundled code.\n    return {\n      code: result.outputFiles[0].text,\n      err: '',\n    };\n  } catch (err) {\n    return {\n      code: '',\n      err: err.message,\n    };\n  }\n};\n\nexport default bundle;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { useTheme } from '@mui/material/styles';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  height: '1.5rem',\n}));\nconst CodeTab = styled(Grid)(({ theme }) => ({\n  flex: 1,\n  display: 'flex',\n  justifyContent: 'center',\n  fontSize: '0.9rem',\n  fontWeight: 'bold',\n}));\nconst PreviewTab = styled(Grid)(({ theme }) => ({\n  flex: 1,\n  color: theme.palette.custom.dark2,\n  opacity: 0.9,\n  fontWeight: 'bold',\n  fontSize: '0.9rem',\n  display: 'flex',\n  justifyContent: 'center',\n}));\n\ninterface TopbarProps {\n  fileName: string;\n  viewState: ViewStateEnum;\n  setViewState: (arg: ViewStateEnum) => void;\n}\n\nenum ViewStateEnum {\n  'code',\n  'preview',\n  'default',\n}\n\nconst Topbar: React.FC<TopbarProps> = ({\n  fileName,\n  viewState,\n  setViewState,\n}) => {\n  const theme = useTheme();\n\n  const codeTabHandler = () => {\n    setViewState(ViewStateEnum.code);\n  };\n\n  const previewTabHandler = () => {\n    setViewState(ViewStateEnum.preview);\n  };\n\n  return (\n    <MainGrid>\n      <CodeTab\n        onClick={codeTabHandler}\n        sx={{\n          backgroundColor:\n            viewState === ViewStateEnum.code\n              ? theme.palette.custom.orange\n              : theme.palette.custom.dark2,\n          color:\n            viewState === ViewStateEnum.code\n              ? theme.palette.custom.dark2\n              : theme.palette.custom.orange,\n        }}\n      >\n        {fileName}\n      </CodeTab>\n      <PreviewTab\n        sx={{\n          backgroundColor:\n            viewState === ViewStateEnum.preview\n              ? theme.palette.custom.orange\n              : theme.palette.custom.dark2,\n          color:\n            viewState === ViewStateEnum.preview\n              ? theme.palette.custom.dark2\n              : theme.palette.custom.orange,\n        }}\n        onClick={previewTabHandler}\n      >\n        preview\n      </PreviewTab>\n    </MainGrid>\n  );\n};\n\nexport default Topbar;\n","import { ActionType } from '../action-creators/actionTypes';\nimport { Action } from '../action-creators/actionCreatorTypes';\nimport { NodeTypes, File, Folder, FileParents } from '../cellNodeTypes';\nimport { produce } from 'immer';\n\n// Here we use immer. Immer basically simplifies handling immutable data structure. In react and redux, we need to be aware of that we should use immutable objects, so it means we need to create a new object/array and should return it everytime.  The structure doesn't force us to keep that mentality so it means we are prone to make error. The immer makes this process easier and satifies these immutable restriction by itself. Also in nested objects, making immutable condition is a bit hard so immer helps us in this condition very efficiently.\n\n// All types return state, it is meanningles with immer but we do it because of typescript. It thinks the reducers may return undefined if we dont do that.\n\nconst html = `<!-- This is your default html for your preview. Please do not change if you are totally aware of what you are doing. I highly do not recommend the changes here, because application is not stable yet.  --> \n\n\n<html>\n    <head>\n      <style> html, body {background-color: white; padding:0; margin:0;} #root {background-color: white} </style>\n    </head>\n    <body>\n      <div id=\"root\"></div>\n      <script>\n\n        const handleError = (err) => {\n          const root = document.querySelector('#root')\n          root.innerHTML = '<div style=\"color: red\"><h4>Runtime Error</h4>' + err + '</div>'\n          console.error(err)\n        }\n\n        window.addEventListener('error', (event)=> {\n          event.preventDefault()\n          handleError(event.error)\n        })\n\n        window.addEventListener('message', (event) => {\n          try {\n            eval(event.data)\n          } catch(err) {\n            handleError(err)\n          }\n        });\n      </script>\n    </body>\n  </html>\n  `;\n\ninterface NodeState {\n  allNodes: (File | Folder)[];\n  attemptToCreate: {\n    status: boolean;\n    nodeType: NodeTypes | null;\n    parentNodeId: string | 'workspace' | null;\n  };\n  selectedFileInfoToView: {\n    nodeId: string;\n    index: number;\n    parent: FileParents;\n    subIndex: number;\n  } | null;\n}\n\nconst defaultIndex = `import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WelcomeCard from 'browser/main/welcomeCard';\n// import 'bulmaswatch/superhero/bulmaswatch.min.css';\n\nconst mainStyle = {\n  backgroundColor: '#273035',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  width: '100%',\n};\n\nconst App = () => {\n  return (\n    <div style={mainStyle}>\n      <WelcomeCard />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));`;\n\n\nconst welcomeCard = `import React from 'react';\n\nconst mainStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  width: \"50%\",\n  gap: \"0.5rem\"\n};\n\nconst headline1 = {\n  fontWeight: \"bold\",\n  fontSize:\"1.2rem\",\n  color: \"#FBAF20\"\n}\n\nconst headline2 = {\n  fontWeight: \"bold\",\n  fontSize:\"3rem\",\n  color: \"white\"\n}\n\nconst description = {\n  fontSize:\"1rem\",\n  color: \"white\",\n  opacity: 0.5\n}\n\nconst WelcomeCard = () => {\n  return (\n    <div style={mainStyle}>\n      <div style={headline1}> Hello, this is your default preview</div>\n      <div style={headline2}>Nix React Editor</div>\n      <div style={description}>\n        The app is not stable yet. If you follow the guide there will not be a\n        problem. If you encounter any unexcepted problem please contact with me\n        with the email : anilakgunes@gmail.com\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeCard\n\n`\n\nconst initialState: NodeState = {\n  allNodes: [\n    {\n      name: 'main',\n      nodeId: 'main',\n      nodeType: 'folder',\n      files: [\n        {\n          name: 'index',\n          nodeId: 'entryPoint',\n          nodeType: 'file',\n          fileFormat: 'javascript',\n          code: defaultIndex,\n          text: '',\n          parent: 'main',\n        },\n        {\n          name: 'welcomeCard',\n          nodeId: 'welcomeCard',\n          nodeType: 'file',\n          fileFormat: 'javascript',\n          code: welcomeCard,\n          text: '',\n          parent: 'main',\n        },\n      ],\n    },\n    {\n      name: 'public',\n      nodeId: 'public',\n      nodeType: 'folder',\n      files: [\n        {\n          name: 'index.html',\n          nodeId: 'html',\n          nodeType: 'file',\n          fileFormat: 'html',\n          code: html,\n          text: '',\n          parent: 'public',\n        },\n      ],\n    },\n  ],\n  attemptToCreate: {\n    status: false,\n    nodeType: null,\n    parentNodeId: null,\n  },\n  selectedFileInfoToView: null,\n};\n\nconst reducer = produce(\n  (state: NodeState = initialState, action: Action): NodeState => {\n    switch (action.type) {\n      case ActionType.CREATE_FILE:\n        const newFile: File = {\n          name: action.payload.name,\n          nodeId: randomId(),\n          nodeType: 'file',\n          fileFormat: 'javascript',\n          code: '',\n          text: '',\n          parent: 'workspace',\n        };\n        state.allNodes.push(newFile);\n\n        return state;\n\n      case ActionType.UPDATE_FILE: {\n        const { nodeId, cellType, newContent, parent } = action.payload;\n        let file: File | Folder;\n\n        if (parent === 'workspace') {\n          const nodeUpdateIndex = state.allNodes.findIndex(\n            (n) => n.nodeId === nodeId\n          );\n          file = state.allNodes[nodeUpdateIndex];\n        }\n\n        // this means it is a subfolder\n        if (parent !== 'workspace') {\n          // don't use find method returns new array, causes issues with immer.\n          const parentIndex = state.allNodes.findIndex(\n            (n) => n.nodeId === parent\n          );\n          const parentFolder = state.allNodes[parentIndex];\n\n          if (parentFolder.nodeType === 'folder') {\n            const subFileIndex = parentFolder.files?.findIndex(\n              (n) => n.nodeId === nodeId\n            );\n\n            file = parentFolder.files[subFileIndex];\n          }\n        }\n\n        if (file.nodeType === 'file') {\n          file[cellType] = newContent;\n        }\n\n        return state;\n      }\n\n      case ActionType.DELETE_FILE:\n        state.allNodes = state.allNodes.filter(\n          (n) => n.nodeId !== action.payload.nodeId\n        );\n\n        const isSelectedFile =\n          state.selectedFileInfoToView.nodeId === action.payload.nodeId;\n\n        if (isSelectedFile) {\n          state.selectedFileInfoToView = null;\n        }\n\n        return state;\n\n      case ActionType.CREATE_FOLDER:\n        const newFolder: Folder = {\n          name: action.payload.name,\n          nodeId: randomId(),\n          nodeType: 'folder',\n          files: [],\n        };\n        state.allNodes.push(newFolder);\n        return state;\n\n      case ActionType.DELETE_FOLDER:\n        state.allNodes = state.allNodes.filter(\n          (n) => n.nodeId !== action.payload.nodeId\n        );\n        return state;\n\n      case ActionType.CREATE_FILE_IN_FOLDER:\n        let file: File = {\n          name: action.payload.name,\n          nodeId: randomId(),\n          nodeType: 'file',\n          fileFormat: 'javascript',\n          code: '',\n          text: '',\n          parent: action.payload.folderNodeId,\n        };\n\n        const nodeFolderIndex = state.allNodes.findIndex(\n          (n) => n.nodeId === action.payload.folderNodeId\n        );\n\n        const folderNode = state.allNodes[nodeFolderIndex];\n\n        if ('files' in folderNode) {\n          folderNode.files.push(file);\n        }\n\n        return state;\n\n      case ActionType.DELETE_FILE_IN_FOLDER: {\n        const nodeFolderIndex = state.allNodes.findIndex(\n          (n) => n.nodeId === action.payload.folderNodeId\n        );\n\n        const folderNode = state.allNodes[nodeFolderIndex];\n\n        if ('files' in folderNode) {\n          folderNode.files = folderNode.files.filter(\n            (n) => n.nodeId !== action.payload.fileNodeId\n          );\n        }\n\n        const isSelectedFile =\n          state.selectedFileInfoToView?.nodeId === action.payload.fileNodeId;\n\n        if (isSelectedFile) {\n          state.selectedFileInfoToView = null;\n        }\n\n        return state;\n      }\n\n      case ActionType.CREATE_NODE_ATTEMPT: {\n        const { nodeType, status, parentNodeId } = action.payload;\n\n        state.attemptToCreate = {\n          status,\n          nodeType,\n          parentNodeId,\n        };\n        return state;\n      }\n\n      case ActionType.SELECT_FILE_INFO_FOR_VIEW: {\n        let mainIndex: number;\n        let subIndex: number;\n\n        if (action.payload.parent === 'workspace') {\n          mainIndex = state.allNodes.findIndex(\n            (n) => n.nodeId === action.payload.nodeId\n          );\n        }\n\n        // this means it is a subfile.\n        if (action.payload.parent !== 'workspace') {\n          const parentFolder = state.allNodes.find(\n            (n) => n.nodeId === action.payload.parent\n          );\n          mainIndex = state.allNodes.findIndex(\n            (n) => n.nodeId === action.payload.parent\n          );\n\n          // type guard\n          if (parentFolder.nodeType === 'folder') {\n            subIndex = parentFolder.files.findIndex(\n              (n) => n.nodeId === action.payload.nodeId\n            );\n          }\n        }\n\n        state.selectedFileInfoToView = {\n          nodeId: action.payload.nodeId,\n          parent: action.payload.parent,\n          index: mainIndex,\n          subIndex: subIndex,\n        };\n\n        // Because of immutability feature of immer, i can't referance a node in all nodes, so this code doesn't work. I need to work around it\n        // ******\n        // const selectedFile = state.allNodes.find(\n        //   (node) => node.nodeId === action.payload.nodeId\n        // );\n\n        // // type guard\n        // if (selectedFile.nodeType === 'file') {\n        //   state.selectedFileToView = selectedFile;\n        // }\n\n        return state;\n      }\n\n      default:\n        return state;\n    }\n  }\n);\n\nconst randomId = () => {\n  return Math.random().toString(36).substr(2, 5);\n};\n\nexport default reducer;\n","import produce from 'immer';\nimport { ActionType } from '../action-creators/actionTypes';\nimport { Action } from '../action-creators/actionCreatorTypes';\n\n// Here we use immer. Immer basically simplifies handling immutable data structure. In react and redux, we need to be aware of that we should use immutable objects, so it means we need to create a new object/array and should return it.  The structure doesn't force us to keep that mentality so it means we are prone to make error. The immer makes this process easier and satifies these immutable restriction by itself. Also in nested objects, making immutable condition is a bit hard so immer helps us in this condition very efficiently.\n\n// All types return state, it is meanningles with immer but we do it because of typescript. It thinks the reducers may return undefined if we dont do that.\n\ninterface BundleState {\n  loading: boolean;\n  code: string;\n  err: string;\n}\n\nconst initialState: BundleState = {\n  loading: false,\n  code: '',\n  err: '',\n};\n\nconst reducer = produce(\n  (state: BundleState = initialState, action: Action): BundleState => {\n    switch (action.type) {\n      case ActionType.BUNDLE_START:\n        state = {\n          loading: true,\n          code: '',\n          err: '',\n        };\n        return state;\n\n      case ActionType.BUNDLE_COMPLETE:\n        state = {\n          loading: false,\n          code: action.payload.bundle,\n          err: action.payload.err,\n        };\n\n        return state;\n      default:\n        return state;\n    }\n  }\n);\n\nexport default reducer;\n","import nodeReducer from './nodeReducer';\nimport bundleReducer from './bundleReducer'\nimport { combineReducers } from 'redux';\n\n\nconst reducers = combineReducers({\n  nodes: nodeReducer,\n  bundle: bundleReducer\n});\n\nexport default reducers;\n\n// weird syntax comes from typescript-redux.\nexport type RootState = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nexport const store = createStore(\n  reducers,\n  {},\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localForage from 'localforage';\nimport { File, Folder } from '../../state/cellNodeTypes';\n\n// we override the paths in unpkgPathPlugin as we want, now time to override the load/fetch feature.\n\n// to minimize the request, we use indexedDB for caching. In some browsers local storage space is limited so we use indexedDB.\nconst fileCache = localForage.createInstance({\n  name: 'filecache',\n});\n\n// this will be called always before build method.\nexport const fetchPlugin = (entry: string, allNodes: (File | Folder)[]) => {\n  return {\n    name: 'fetchPlugin',\n    setup(build: esbuild.PluginBuild) {\n      // loader for index.js\n      // this is entry point / we assume that it will jsx, can be customizable later.\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          loader: 'jsx',\n          contents: entry,\n        };\n      });\n\n      // kind of middleware for caching third parties\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        if (args.path.startsWith('browser')) {\n          return;\n        }\n\n        // Checked cached first\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n\n        // if found, return immediately\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n\n      // loader for css third parties such as bulma.css\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path);\n\n        // in browser we can't create two file, so we need to trick esbuild. we take our css data and wrap it with js and append into dom.\n\n        // the quotes conflicts here so we need to escape them.\n        const escaped = data\n          .replace(/\\n/g, '') // new lines removed.\n          .replace(/\"/g, '\\\\\"') // double quotas escaped\n          .replace(/'/g, \"\\\\'\"); // single quotes escaped\n        const contents = `\n          const style = document.createElement('style');\n          style.innerText = '${escaped}';\n          document.head.appendChild(style)\n          `;\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents: contents,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n\n        // store it in cached\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      // loader for plain javascript files.\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        let result: esbuild.OnLoadResult;\n\n        // third party packege\n        if (!args.path.startsWith('browser')) {\n          const { data, request } = await axios.get(args.path);\n          result = {\n            loader: 'jsx',\n            contents: data,\n            resolveDir: new URL('./', request.responseURL).pathname,\n          };\n\n          // store it in cached\n          await fileCache.setItem(args.path, result);\n        }\n\n        // inner file\n        if (args.path.startsWith('browser')) {\n          let viewCode: string;\n          const pathArray = args.path.split('/');\n          const nodes: (File | Folder)[] = allNodes;\n          const viewNode = nodes.find((n) => n.name === pathArray[1]);\n\n          // for nested folder feature, this can work recursively\n          if (viewNode.nodeType === 'folder') {\n            const viewFile = viewNode.files.find(\n              (n) => n.name === pathArray[2]\n            );\n            viewFile === undefined\n              ? (viewCode = '')\n              : (viewCode = viewFile.code);\n          }\n\n          if (viewNode.nodeType === 'file') {\n            viewCode = viewNode.code;\n          }\n\n          result = {\n            loader: 'jsx',\n            contents: viewCode,\n          };\n        }\n\n        return result;\n      });\n    },\n  };\n};\n","import * as esbuild from 'esbuild-wasm';\n\n// These plugin is created for the sole purpose of overriding path resolver.\n// we want fetch third parties from unpkg and virtual file structure in browser.\n\nexport const unpkgPathPlugin = () => {\n  return {\n    // we named this for debugging purposes.\n    name: 'unpkg-path-plugin',\n\n    // bu setup, esbuild de 'build' api kullanıldıkça otomatik olarak çalışıcak.\n    setup(build: esbuild.PluginBuild) {\n      // onResolve : override the path of imports - esbuild checks fs system as default we dont want that for some imports.\n      // returns the file path we want\n      // filter - just filters depending on paths.\n\n      // path finder for index.js\n      // entry point for bundle.\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          path: 'index.js',\n          namespace: 'a',\n        };\n      });\n\n      // path finder:  some libraries we want to fetch can be have nested files and these nested files can have imports paths as or ./ ../main and so on. That'why we also override them as well.\n      // new URL create a URL object for us. href is the full url we want so we return it.\n\n      // args.resolveDir burda bulunan son folder pathını veriyor. sallıyorum src/components/navbar.js içindeki relative bir importandan bahsediyorsak, bu resolve dir \"/src/components/\" bu pathi veriyor\n      // args.path - import card from './card\"  - burdaki \"./card\" pathini veriyor.\n\n      // filter for \"./\" or \"../\"\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\n            .href,\n        };\n      });\n\n      // path finder : root package such as 'react' vs...\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        // resolve the path for third party package\n        if (!args.path.startsWith('browser')) {\n          return {\n            namespace: 'a',\n            path: `https://unpkg.com/${args.path}`,\n          };\n        }\n\n        // resolve the path for virtual file system\n        if (args.path.startsWith('browser')) {\n          return {\n            namespace: 'a',\n            path: args.path,\n          };\n        }\n      });\n    },\n  };\n};\n\n// The filter and namespace is totally for filtering. Sometimes we may want to work this plugin in some special files, we can use them for these kind of as a filter.\n\n// This plugin works recursively till all files load.\n","import { Dispatch } from 'redux';\nimport { ActionType } from './actionTypes';\nimport { CellTypes, NodeTypes, FileParents, File, Folder } from '../cellNodeTypes';\nimport {\n  CreateFileAction,\n  UpdateFileAction,\n  DeleteFileAction,\n  CreateFolderAction,\n  DeleteFolderAction,\n  CreateFileInFolderAction,\n  DeleteFileInFolderAction,\n  CreationNoteAttempt,\n  SelectFileInfoForView,\n  Action,\n} from './actionCreatorTypes';\nimport bundle from '../../bundler';\n\nexport const createFile = (name: string): CreateFileAction => {\n  return {\n    type: ActionType.CREATE_FILE,\n    payload: {\n      name,\n    },\n  };\n};\n\nexport const updateFile = (\n  nodeId: string,\n  cellType: CellTypes,\n  newContent: string,\n  parent: FileParents\n): UpdateFileAction => {\n  return {\n    type: ActionType.UPDATE_FILE,\n    payload: {\n      nodeId,\n      cellType,\n      newContent,\n      parent,\n    },\n  };\n};\n\nexport const deleteFile = (nodeId: string): DeleteFileAction => {\n  return {\n    type: ActionType.DELETE_FILE,\n    payload: {\n      nodeId,\n    },\n  };\n};\n\nexport const createFolder = (name: string): CreateFolderAction => {\n  return {\n    type: ActionType.CREATE_FOLDER,\n    payload: {\n      name,\n    },\n  };\n};\n\nexport const deleteFolder = (nodeId: string): DeleteFolderAction => {\n  return {\n    type: ActionType.DELETE_FOLDER,\n    payload: {\n      nodeId,\n    },\n  };\n};\n\nexport const createFileInFolder = (\n  folderNodeId: string,\n  name: string\n): CreateFileInFolderAction => {\n  return {\n    type: ActionType.CREATE_FILE_IN_FOLDER,\n    payload: {\n      folderNodeId,\n      name,\n    },\n  };\n};\n\nexport const deleteFileInFolder = (\n  folderNodeId: string,\n  fileNodeId: string\n): DeleteFileInFolderAction => {\n  return {\n    type: ActionType.DELETE_FILE_IN_FOLDER,\n    payload: {\n      folderNodeId,\n      fileNodeId,\n    },\n  };\n};\n\nexport const createNodeAttempt = (\n  nodeType: NodeTypes,\n  status: boolean,\n  parentNodeId: string\n): CreationNoteAttempt => {\n  return {\n    type: ActionType.CREATE_NODE_ATTEMPT,\n    payload: {\n      nodeType,\n      status,\n      parentNodeId,\n    },\n  };\n};\n\nexport const selectFileForView = (\n  nodeId: string,\n  parent: FileParents\n): SelectFileInfoForView => {\n  return {\n    type: ActionType.SELECT_FILE_INFO_FOR_VIEW,\n    payload: {\n      nodeId,\n      parent,\n    },\n  };\n};\n\nexport const createBundle = (entry: string, allNodes: (File | Folder)[]) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n    });\n\n    const result = await bundle(entry, allNodes);\n\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        bundle: result.code,\n        err: result.err,\n      },\n    });\n  };\n};\n","import {useSelector, TypedUseSelectorHook} from 'react-redux'\nimport {RootState} from '../state'\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useTypedSelector","import {useMemo} from \"react\"\nimport {useDispatch} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport {actionCreators} from '../state'\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n\n  return useMemo(()=> {\n    return bindActionCreators(actionCreators, dispatch)\n  }, [dispatch])\n}\n\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\nimport { File } from '../../state/cellNodeTypes';\nimport { useActions } from '../../hooks/use-actions';\nimport useTypedSelector from '../../hooks/use-typed-selector';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport IconButton from '@mui/material/IconButton';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  cursor: 'pointer',\n}));\n\nconst LineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  padding: '0.1rem 1.5rem',\n  justifyContent: 'space-between',\n}));\n\nconst LeftLineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n}));\n\nconst FileIconStyled = styled(InsertDriveFileOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  fontSize: '1.2rem',\n  marginRight: '0.4rem',\n  marginLeft: '1.1rem',\n}));\n\nconst NodeName = styled(Typography)(({ theme }) => ({\n  color: '#dddddd',\n  fontWeight: 'bold',\n  fontSize: '0.8rem',\n}));\n\nconst RightLineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: '0.4rem',\n}));\n\nconst IconButtonDeleteFile = styled(IconButton)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  color: theme.palette.custom.textGrey,\n}));\nconst IconFileDelete = styled(HighlightOffIcon)(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  fontSize: '1.2rem',\n}));\n\ninterface NodeFileProps {\n  node: File;\n}\n\nconst NodeFile: React.FC<NodeFileProps> = ({ node }) => {\n  const { selectFileForView, deleteFile, deleteFileInFolder } = useActions();\n  const selectedFileInfo = useTypedSelector(\n    (state) => state.nodes.selectedFileInfoToView\n  );\n\n  const selectFileToViewHandler = () => {\n    selectFileForView(node.nodeId, node.parent);\n  };\n\n  const deleteFileHandler = () => {\n    if (node.parent !== 'workspace') {\n      deleteFileInFolder(node.parent, node.nodeId);\n    }\n    if (node.parent === 'workspace') {\n      deleteFile(node.nodeId);\n    }\n  };\n\n  return (\n    <MainGrid\n      sx={{\n        background:\n          node.nodeId === selectedFileInfo?.nodeId\n            ? 'linear-gradient(to right, transparent 10%, orange )'\n            : 'transparent',\n      }}\n    >\n      <LineGrid key={node.nodeId}>\n        <LeftLineGrid onClick={selectFileToViewHandler}>\n          <FileIconStyled />\n          <NodeName>{node.name}</NodeName>\n        </LeftLineGrid>\n        <RightLineGrid>\n          <IconButtonDeleteFile onClick={deleteFileHandler}>\n            <IconFileDelete />\n          </IconButtonDeleteFile>\n        </RightLineGrid>\n      </LineGrid>\n    </MainGrid>\n  );\n};\n\nexport default NodeFile;\n","import { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport useTypedSelector from '../../hooks/use-typed-selector';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\nimport { useActions } from '../../hooks/use-actions';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: '1.2rem',\n  marginBottom: '1rem',\n}));\n\nconst LineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  padding: '0.1rem 1.5rem',\n  justifyContent: 'space-between',\n  width: \"100%\"\n}));\n\nconst FolderIconStyled = styled(FolderIcon)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  fontSize: '1.2rem',\n  marginRight: '0.4rem',\n}));\n\nconst FileIconStyled = styled(InsertDriveFileOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  fontSize: '1.2rem',\n  marginRight: '0.4rem',\n}));\n\nconst InputStyled = styled('input')(({ theme }) => ({\n  lineHeight: '0.8rem',\n  outline: 'none',\n  borderColor: theme.palette.custom.orange,\n  backgroundColor: 'transparent',\n  borderRadius: '0.2rem',\n  color: theme.palette.custom.orange,\n  width: \"100%\"\n}));\n\nconst FormStyled = styled('form')(({ theme }) => ({\n  width: \"100%\"\n}));\n\ninterface NodeAddFormProps {\n  parentNodeId: string | 'workspace' | null;\n}\n\nconst NodeAddForm: React.FC<NodeAddFormProps> = ({ parentNodeId }) => {\n  const nodeAttempt = useTypedSelector((state) => state.nodes.attemptToCreate);\n  const [nodeNameInput, setNodeNameInput] = useState<string>();\n  const { createFolder, createFile, createNodeAttempt, createFileInFolder } =\n    useActions();\n\n  const formHandler = (\n    e: React.FocusEvent<HTMLFormElement> | React.KeyboardEvent<HTMLFormElement>\n  ) => {\n    if ('charCode' in e && e.key !== 'Enter') {\n      return;\n    }\n\n    if (nodeNameInput === '') {\n      createNodeAttempt(null, false, null);\n      return;\n    }\n\n    if (nodeAttempt.nodeType === 'folder') {\n      createFolder(nodeNameInput);\n      createNodeAttempt(null, false, null);\n      setNodeNameInput('');\n    }\n\n    if (nodeAttempt.nodeType === 'file') {\n      parentNodeId === 'workspace'\n        ? createFile(nodeNameInput)\n        : createFileInFolder(parentNodeId, nodeNameInput);\n      createNodeAttempt(null, false, null);\n      setNodeNameInput('');\n    }\n  };\n\n  return (\n    <MainGrid>\n      <LineGrid>\n        {nodeAttempt.nodeType === 'folder' ? (\n          <FolderIconStyled />\n        ) : (\n          <FileIconStyled />\n        )}\n        <FormStyled onBlur={formHandler} onKeyPress={formHandler}>\n          <InputStyled\n            value={nodeNameInput}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>): void =>\n              setNodeNameInput(e.target.value)\n            }\n            autoFocus\n            id=\"standard-basic\"\n          />\n        </FormStyled>\n      </LineGrid>\n    </MainGrid>\n  );\n};\n\nexport default NodeAddForm;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport KeyboardArrowRightOutlinedIcon from '@mui/icons-material/KeyboardArrowRightOutlined';\nimport IconButton from '@mui/material/IconButton';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useState } from 'react';\nimport { Folder } from '../../state/cellNodeTypes';\nimport NodeFile from './nodeFile';\nimport NodeAddForm from './nodeAddForm';\nimport useTypedSelector from '../../hooks/use-typed-selector';\nimport { useActions } from '../../hooks/use-actions';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({}));\nconst SubFilesGrid = styled(Grid)(({ theme }) => ({\n  marginLeft: '1rem',\n}));\nconst LineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  padding: '0.1rem 1.5rem',\n  justifyContent: 'space-between',\n}));\nconst LeftLineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n}));\nconst RightLineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: '0.4rem',\n}));\nconst FolderIconStyled = styled(FolderIcon)(({ theme }) => ({\n  color: theme.palette.secondary.main,\n  fontSize: '1.2rem',\n  marginRight: '0.4rem',\n}));\nconst IconArrowDown = styled(KeyboardArrowDownIcon)(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  padding: 0,\n  margin: 0,\n  fontSize: '1.2rem',\n}));\nconst IconButtonArrow = styled(IconButton)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  color: theme.palette.custom.textGrey,\n}));\nconst NodeName = styled(Typography)(({ theme }) => ({\n  color: '#dddddd',\n  fontWeight: 'bold',\n  fontSize: '0.8rem',\n}));\nconst IconArrow = styled(KeyboardArrowRightOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  padding: 0,\n  margin: 0,\n  fontSize: '1.2rem',\n}));\nconst IconButtonAddFile = styled(IconButton)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  color: theme.palette.custom.textGrey,\n}));\nconst IconButtonDeleteFolder = styled(IconButton)(({ theme }) => ({\n  padding: 0,\n  margin: 0,\n  color: theme.palette.custom.textGrey,\n}));\nconst IconFolderDelete = styled(HighlightOffIcon)(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  fontSize: '1.2rem',\n}));\nconst IconFileAdd = styled(InsertDriveFileOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  fontSize: '1.2rem',\n}));\n\ninterface NodeFolderProps {\n  node: Folder;\n}\n\nconst NodeFolder: React.FC<NodeFolderProps> = ({ node }) => {\n  const [isFolderOpen, setIsFolderOpen] = useState<Boolean>(false);\n  const nodeAttempt = useTypedSelector((state) => state.nodes.attemptToCreate);\n  const { createNodeAttempt, deleteFolder } = useActions();\n\n  const subFiles = node.files;\n\n  const folderOpenHandler = () => {\n    setIsFolderOpen(!isFolderOpen);\n  };\n\n  const addFileInFolderHandler = () => {\n    createNodeAttempt('file', true, node.nodeId);\n    setIsFolderOpen(true);\n  };\n\n  const deleteFolderHandler = () => {\n    deleteFolder(node.nodeId);\n  };\n\n  return (\n    <MainGrid>\n      <LineGrid key={node.nodeId}>\n        <LeftLineGrid>\n          <IconButtonArrow onClick={folderOpenHandler}>\n            {isFolderOpen ? <IconArrowDown /> : <IconArrow />}\n          </IconButtonArrow>\n          <FolderIconStyled />\n          <NodeName>{node.name}</NodeName>\n        </LeftLineGrid>\n\n        <RightLineGrid>\n          <IconButtonAddFile onClick={addFileInFolderHandler}>\n            <IconFileAdd />\n          </IconButtonAddFile>\n          <IconButtonDeleteFolder onClick={deleteFolderHandler}>\n            <IconFolderDelete />\n          </IconButtonDeleteFolder>\n        </RightLineGrid>\n      </LineGrid>\n      {nodeAttempt.status === true &&\n      nodeAttempt.parentNodeId === node.nodeId ? (\n        <NodeAddForm parentNodeId={node.nodeId} />\n      ) : (\n        ''\n      )}\n      <SubFilesGrid>\n        {isFolderOpen\n          ? subFiles.map((file) => <NodeFile key={file.nodeId} node={file} />)\n          : ''}\n      </SubFilesGrid>\n    </MainGrid>\n  );\n};\n\nexport default NodeFolder;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { File, Folder } from '../../state/cellNodeTypes';\nimport NodeFolder from './nodeFolder';\nimport NodeFile from './nodeFile';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({}));\n\ninterface NodeItemProps {\n  node: File | Folder;\n}\n\nconst NodeItem: React.FC<NodeItemProps> = ({ node }) => {\n  return (\n    <MainGrid>\n      {node.nodeType === 'folder' ? (\n        <NodeFolder node={node} />\n      ) : (\n        <NodeFile node={node} />\n      )}\n    </MainGrid>\n  );\n};\n\nexport default NodeItem;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport useTypedSelector from '../../hooks/use-typed-selector';\nimport NodeItem from './nodeItem';\nimport { File, Folder } from '../../state/cellNodeTypes';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({}));\n\nconst NodeList: React.FC = () => {\n  const nodeListArray = useTypedSelector((state) => state.nodes.allNodes);\n\n  return (\n    <MainGrid>\n      {nodeListArray.map((node: File | Folder) => {\n        return <NodeItem key={node.nodeId} node={node} />;\n      })}\n    </MainGrid>\n  );\n};\n\nexport default NodeList;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport NodeList from './nodeList';\nimport useTypedSelector from '../../hooks/use-typed-selector';\nimport NodeAddForm from './nodeAddForm';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  background: theme.palette.custom.dark2,\n  width: '18rem',\n  minWidth: '15rem',\n  resize: 'horizontal',\n  overflow: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nconst HeadlineGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  padding: '0rem 1rem',\n  gap: '0.5rem',\n  marginTop: '1.5rem',\n  marginBottom: '1rem',\n}));\n\nconst Headline = styled(Typography)(({ theme }) => ({\n  color: theme.palette.custom.orange,\n  fontWeight: 'bold',\n  paddingTop: '1.5rem 0rem',\n}));\n\nconst Sidebar: React.FC = () => {\n  const nodeAttempt = useTypedSelector((state) => state.nodes.attemptToCreate);\n\n  return (\n    <MainGrid>\n      <HeadlineGrid>\n        <Headline variant=\"subtitle2\">Workspace</Headline>\n      </HeadlineGrid>\n      {nodeAttempt.status === true &&\n      nodeAttempt.parentNodeId === 'workspace' ? (\n          <NodeAddForm parentNodeId=\"workspace\" />\n      ) : (\n        ''\n      )}\n      <NodeList />\n    </MainGrid>\n  );\n};\n\nexport default Sidebar;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\nimport CreateNewFolderOutlinedIcon from '@mui/icons-material/CreateNewFolderOutlined';\nimport IconButton from '@mui/material/IconButton';\nimport MenuOutlinedIcon from '@mui/icons-material/MenuOutlined';\nimport {useActions} from '../../hooks/use-actions'\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  background: theme.palette.custom.dark1,\n  width: '3.5rem',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '1rem 0rem',\n}));\n\nconst IconFolderAdd = styled(CreateNewFolderOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.custom.orange,\n  fontSize: '1.8rem',\n}));\n\nconst IconMenu = styled(MenuOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.custom.orange,\n  fontSize: '1.4rem',\n}));\n\nconst IconFileAdd = styled(InsertDriveFileOutlinedIcon)(({ theme }) => ({\n  color: theme.palette.custom.orange,\n  fontSize: '1.8rem',\n}));\n\nconst MiniSidebar: React.FC = () => {\n  const {createNodeAttempt} = useActions();\n\n  const folderHandler = () => {\n    createNodeAttempt(\"folder\", true, \"workspace\")\n  }\n\n  const fileHandler = () => {\n    createNodeAttempt(\"file\", true, \"workspace\")\n  }\n\n\n  return (\n    <MainGrid>\n      <IconButton>\n        <IconMenu />\n      </IconButton>\n      <IconButton onClick={folderHandler}>\n        <IconFolderAdd  />\n      </IconButton>\n      <IconButton onClick={fileHandler}>\n        <IconFileAdd />\n      </IconButton>\n    </MainGrid>\n  );\n};\n\nexport default MiniSidebar;\n","import { createTheme, responsiveFontSizes } from '@mui/material/styles';\n\ndeclare module '@mui/material/styles' {\n  interface PaletteOptions {\n    custom?: {\n      [color: string]: string;\n    };\n  }\n\n  export interface Palette {\n    custom: {\n      [color: string]: string;\n    };\n  }\n}\n\n// Create a theme instance.\nlet theme = createTheme({\n  palette: {\n    primary: {\n      main: '#fca500',\n    },\n    secondary: {\n      main: '#007fd4',\n    },\n    custom: {\n      dark1: '#333333',\n      dark2: '#242424',\n      dark3: '#1A1A1A',\n      textGrey: '#aaaaaa',\n      textWhite: '#ffffff',\n      editorColor: '#202124',\n      orange: '#fca500',\n      orangeLight: '#33fca500',\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import '../../syntax.css';\nimport { useRef } from 'react';\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserHTML from 'prettier/parser-html';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter';\nimport Grid from '@mui/material/Grid';\nimport { styled } from '@mui/material/styles';\nimport { FileFormat } from '../../../state/cellNodeTypes';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  background: theme.palette.custom.editorColor,\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n  padding: '2rem 0rem',\n}));\n\nconst FormatButton = styled('button')(({ theme }) => ({\n  position: 'absolute',\n  backgroundColor: theme.palette.custom.orange,\n  top: '1rem',\n  width: '6rem',\n  zIndex: 1000,\n  right: '3rem',\n  fontSize: '0.7rem',\n  fontWeight: 'bold',\n  padding: '0.4rem',\n  border: 'none',\n  outline: 'none',\n  borderRadius: '0.2rem',\n  cursor: 'pointer',\n  transition: 'transform 0.3s ease-in',\n  '&:hover': {\n    backgroundColor: theme.palette.custom.dark2,\n    color: theme.palette.custom.orange,\n  },\n  '&:active': {\n    transform: 'translate(0px, 5px)',\n  },\n}));\n\nconst BundleButton = styled('button')(({ theme }) => ({\n  position: 'absolute',\n  backgroundColor: theme.palette.custom.orange,\n  top: '4rem',\n  width: '6rem',\n  zIndex: 1000,\n  right: '3rem',\n  fontSize: '0.7rem',\n  fontWeight: 'bold',\n  padding: '0.4rem',\n  border: 'none',\n  outline: 'none',\n  borderRadius: '0.2rem',\n  cursor: 'pointer',\n  transition: 'transform 0.3s ease-in',\n  '&:hover': {\n    backgroundColor: theme.palette.custom.dark2,\n    color: theme.palette.custom.orange,\n  },\n  '&:active': {\n    transform: 'translate(0px, 5px)',\n  },\n}));\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n  fileFormat: FileFormat;\n  doBundle: () => void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({\n  onChange,\n  initialValue,\n  fileFormat,\n  doBundle,\n}) => {\n  // for setting and getting value from editor.\n  const editorRef = useRef<any>();\n\n  // kind of onChange Handler for Editor to get Value.\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    //indendation config\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n\n    // monocoEditor code highlighter is bad, we use a library.\n    const highlighter = new Highlighter(\n      // @ts-ignore\n      window.monaco,\n      codeShift,\n      monacoEditor\n    );\n\n    // emptyh functions to override default config related with console error feedback. triggered too often in every keyboard press which is annoying. so we override them with empty functions.\n    highlighter.highLightOnDidChangeModelContent(\n      () => {},\n      () => {},\n      undefined,\n      () => {}\n    );\n  };\n\n  const prettierParser = fileFormat === 'javascript' ? 'babel' : 'html';\n  // Prettier for formatting\n  const onFormatClick = () => {\n    try {\n      // get current value from editor\n      const unformatted = editorRef.current.getModel().getValue();\n\n      // format the value\n      const formatted = prettier\n        .format(unformatted, {\n          parser: prettierParser,\n          plugins: [parserBabel, parserHTML],\n          useTabs: false,\n          semi: true,\n          singleQuote: true,\n        })\n        .replace(/\\n$/, ''); // delete new line\n\n      // set the formatted value back in the editor.\n      editorRef.current.setValue(formatted);\n    } catch (err) {\n      // causes to crash app often. That's why we catch err.\n      console.log(err);\n    }\n  };\n\n  return (\n    <MainGrid>\n      <FormatButton onClick={onFormatClick}>Format</FormatButton>\n      <BundleButton onClick={doBundle}>Re-Bundle</BundleButton>\n      <MonacoEditor\n        editorDidMount={onEditorDidMount}\n        value={initialValue}\n        language={fileFormat}\n        theme=\"dark\"\n        height=\"100%\"\n        options={{\n          wordWrap: 'on',\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 16,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </MainGrid>\n  );\n};\n\nexport default CodeEditor;\n","import CodeEditor from './code-editor';\nimport { File } from '../../../state';\nimport { useActions } from '../../../hooks/use-actions';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { useState, useEffect } from 'react';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  background: theme.palette.custom.dark1,\n  width: '100%',\n  height: '100%',\n}));\n\ninterface CodeCellProps {\n  file: File | null;\n  doBundle: () => void;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ file, doBundle }) => {\n  const { updateFile } = useActions();\n  const [editorCode, setEditorCode] = useState<string>(file.code);\n\n  const onChangeHandler = (value: string): void => {\n    setEditorCode(value);\n  };\n  useEffect(() => {\n    updateFile(file.nodeId, 'code', editorCode, file.parent);\n  }, [editorCode]);\n\n  return (\n    <MainGrid>\n      <CodeEditor\n        doBundle={doBundle}\n        initialValue={file.code}\n        onChange={(value: string) => onChangeHandler(value)}\n        fileFormat={file.fileFormat}\n      />\n    </MainGrid>\n  );\n};\n\nexport default CodeCell;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport CodeCell from './code/code-cell';\nimport Topbar from './topbar';\nimport { useState, useEffect } from 'react';\nimport Preview from '../mainSections/view/preview';\nimport useTypedSelector from '../../hooks/use-typed-selector';\nimport { useActions } from '../../hooks/use-actions';\nimport { File, Folder } from '../../state/cellNodeTypes';\nimport WelcomeGuide from './welcomeGuide';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexGrow: 1,\n  flexDirection: 'column',\n}));\n\nenum ViewStateEnum {\n  'code',\n  'preview',\n  'default',\n}\n\nconst Main: React.FC = () => {\n  const [viewState, setViewState] = useState<ViewStateEnum>(\n    ViewStateEnum.default\n  );\n\n  // for preview\n  const entryPointRawCode = useTypedSelector((state) => {\n    let rawCode: string;\n    const srcFolderNode = state.nodes.allNodes.find((n) => n.nodeId === 'main');\n\n    // type guard\n    if (srcFolderNode.nodeType === 'folder') {\n      rawCode = srcFolderNode.files.find((n) => n.nodeId === 'entryPoint').code;\n    }\n\n    return rawCode;\n  });\n  const { createBundle } = useActions();\n  const bundle = useTypedSelector((state) => state.bundle);\n  const allNodes = useTypedSelector((state) => state.nodes.allNodes);\n  // Debouncing : means grouping multiple sequantial calls into one. Performance improvement.\n\n  const doBundle = () => {\n    createBundle(entryPointRawCode, allNodes as (File | Folder)[]);\n  };\n  useEffect(() => {\n    if (!bundle.code) {\n      doBundle();\n      return;\n    }\n\n    const timer = setTimeout(async () => {\n      doBundle();\n    }, 750);\n\n    return () => {\n      clearTimeout(timer);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entryPointRawCode, createBundle]);\n\n  // for code editor\n  const selectedFileInfo = useTypedSelector(\n    (state) => state.nodes.selectedFileInfoToView\n  );\n  const selectedFile = useTypedSelector((state) => {\n    if (selectedFileInfo?.parent === 'workspace') {\n      return state.nodes.allNodes[selectedFileInfo?.index];\n    }\n    if (selectedFileInfo?.parent !== 'workspace') {\n      const parentFolder = state.nodes.allNodes[selectedFileInfo?.index];\n\n      if (parentFolder?.nodeType === 'folder') {\n        return parentFolder.files[selectedFileInfo?.subIndex];\n      }\n    }\n  });\n\n  // debug for deleting selected file\n  useEffect(() => {\n    if (selectedFileInfo === null) {\n      setViewState(ViewStateEnum.default);\n    }\n  }, [selectedFileInfo]);\n\n  const renderJSX = () => {\n    switch (viewState) {\n      case ViewStateEnum.code:\n        return (\n          <CodeCell\n            doBundle={doBundle}\n            file={selectedFile?.nodeType === 'file' && selectedFile}\n          />\n        );\n\n      case ViewStateEnum.preview:\n        return <Preview code={bundle.code} err={bundle.err} />;\n\n      case ViewStateEnum.default:\n        return <WelcomeGuide />;\n    }\n  };\n\n  return (\n    <MainGrid>\n      {selectedFile ? (\n        <Topbar\n          fileName={selectedFile?.name}\n          setViewState={setViewState}\n          viewState={viewState}\n        />\n      ) : (\n        ''\n      )}\n      {renderJSX()}\n    </MainGrid>\n  );\n};\n\nexport default Main;\n","import { useRef, useEffect } from 'react';\nimport useTypedSelector from '../../../hooks/use-typed-selector';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\n\ninterface PreviewProps {\n  code: string;\n  err: string;\n}\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n}));\nconst Iframe = styled(\"iframe\")(({ theme }) => ({\n  height: \"100%\",\n  width: \"100%\"\n}));\nconst ErrorGrid = styled(Grid)(({ theme }) => ({\n  position: \"absolute\",\n  top: \"10px\",\n  left: \"10px\",\n  color: \"red\",\n}));\n\n\n// There is a security issue with iframe. From child to parent , \"parent\" keyword and from parent to child with querySelector and contentWindow method, we can communicate. So there is a bidirectional communication between these places and causes security vulnerability. We prevent it sandbox attribute.\n\n// We wanted to put all code inside srcDoc but some browser limit the size of attributes.\n// There is a light and secure communication way between parent-child which is a spesific event.\n// https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n// Basically we put a eventlistener in child to listen the parent for a spesific event : message.\n// The rest of the default script is about error handling in preview, not the consule, for better UX\n\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n  const iframe = useRef<any>();\n  const html = useTypedSelector((state) => {\n    const publicFolder = state.nodes.allNodes.find(\n      (n) => n.nodeId === 'public'\n    );\n    let htmlCode: string;\n    if (publicFolder.nodeType === 'folder') {\n      return publicFolder.files.find((n) => n.nodeId === 'html').code;\n    }\n  });\n\n  useEffect(() => {\n    // having fresh html&script structure everytime.\n    iframe.current.srcdoc = html;\n\n    // sending event to say: new code has arrived.\n    setTimeout(() => {\n      // need some time to send event. * means domains restriction. so any domain can receive these message. For further security option.\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 50);\n  }, [code, html]);\n\n  return (\n    <MainGrid>\n      <Iframe // iframe provide us an isolated place to execute code.\n        ref={iframe}\n        title=\"code preview\"\n        sandbox=\"allow-scripts\" // break the communication with parent for security. We want to put the user code in the html we define in srcDoc, so we need to let the frame use this script so we choose allow-scripts.\n        srcDoc={html} // allow us to insert html/content\n      />\n      {err && <ErrorGrid>{err}</ErrorGrid>}\n    </MainGrid>\n  );\n};\n\nexport default Preview;\n","import { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '3rem',\n}));\n\nconst Headline = styled(Typography)(({ theme }) => ({\n  color: 'orange',\n  fontSize: '2rem',\n}));\n\nconst Text = styled(Typography)(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  fontSize: '1rem',\n  marginTop: '2rem',\n  width: '70%',\n}));\n\nconst List = styled('ul')(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  fontSize: '1rem',\n  marginTop: '1rem',\n  width: '70%',\n}));\n\nconst ListItem = styled('li')(({ theme }) => ({\n  color: theme.palette.custom.textGrey,\n  fontSize: '1rem',\n  marginTop: '1rem',\n}));\n\nconst WelcomeGuide: React.FC = () => {\n  return (\n    <MainGrid>\n      <Headline>Welcome to Nix Browser Editor</Headline>\n      <Text>\n        Nix editor is a react browser editor. Nix editor is not stable yet\n        that's why we would like to follow the guide we provide.\n      </Text>\n      <List>\n        <ListItem>\n          Please do not delete default folders which are \"main\" and \"public\".\n          There are entry points for bundler.\n        </ListItem>\n        <ListItem>\n          Please starts with \"browser\" to import a local files. such as \"import\n          Navbar from \"browser/src/navbar\"\n        </ListItem>\n        <ListItem>\n          Please do not use relative path for local file. Use always absolute\n          path.\n        </ListItem>\n        <ListItem>\n          Nested folder structure is not supported yet. You can only have files\n          in your folders.\n        </ListItem>\n        <ListItem>\n          Please use inline styles for components. Individual css files are not\n          supported yet. However you can import bulma or tailwind libraries and\n          can use with classname attributes.\n        </ListItem>\n        <ListItem>\n          The html file in public folder is your default preview html file. It\n          is not recommended to change it unless you are aware of exactly how\n          the editor works.\n        </ListItem>\n        <ListItem>\n          You can't rename folders or files. You need to delete and recreate\n          them. Also you can't move them as well.\n        </ListItem>\n      </List>\n    </MainGrid>\n  );\n};\n\nexport default WelcomeGuide;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './state';\nimport Sidebar from './components/sidebar';\nimport MiniSidebar from './components/miniSidebar';\nimport Grid from '@mui/material/Grid';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './styles/theme';\nimport { styled } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Main from './components/mainSections';\n\nconst MainGrid = styled(Grid)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  background: theme.palette.custom.dark3,\n  minHeight: '100vh',\n  width: '100vw',\n}));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <MainGrid>\n          <MiniSidebar />\n          <Sidebar />\n          <Main />\n        </MainGrid>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}